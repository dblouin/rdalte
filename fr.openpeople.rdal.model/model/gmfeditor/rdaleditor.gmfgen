<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel" diagramFileExtension="rdal_diagram"
    domainFileExtension="rdal"
    pluginDirectory="/fr.openpeople.rdal.model.diagram/src">
  <diagram
      visualID="1000"
      editPartClassName="SpecificationEditPart"
      itemSemanticEditPolicyClassName="SpecificationItemSemanticEditPolicy"
      canonicalEditPolicyClassName="SpecificationCanonicalEditPolicy"
      iconProviderPriority="Low"
      creationWizardCategoryID="fr.openpeople.rdal.Wizard.category.ID"
      editingDomainID="fr.openpeople.rdal.model.core.diagram.EditingDomain"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="SpecificationEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="../metamodel/rdal.genmodel#//core/Specification"/>
    <childNodes
        visualID="3003"
        editPartClassName="RequirementEditPart"
        itemSemanticEditPolicyClassName="RequirementItemSemanticEditPolicy"
        notationViewFactoryClassName="RequirementViewFactory"
        canonicalEditPolicyClassName="RequirementCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="RequirementGraphicalNodeEditPolicy"
        createCommandClassName="RequirementCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="RequirementEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="RequirementFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RequirementFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTypeFigure; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRequirementNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RequirementFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureTypeFigure.setText(&quot;&quot;);&#xA;&#xA;fFigureTypeFigure.setFont(FFIGURETYPEFIGURE_FONT);&#xA;&#xA;&#xA;&#xA;this.add(fFigureTypeFigure);&#xA;&#xA;&#xA;&#xA;fFigureRequirementNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRequirementNameFigure.setText(&quot;What should the system do?&quot;);&#xA;&#xA;this.add(fFigureRequirementNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTypeFigure() {&#xA;&#x9;&#x9;return fFigureTypeFigure;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRequirementNameFigure() {&#xA;&#x9;&#x9;return fFigureRequirementNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 250, 250, 190);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Font FFIGURETYPEFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;sansserif&quot;, 8, org.eclipse.swt.SWT.ITALIC);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../metamodel/rdal.genmodel#//core/Requirement"/>
        <containmentMetaFeature
            href="../metamodel/rdal.genmodel#//core/RequirementsGroup/requirements"/>
        <childMetaFeature
            href="../metamodel/rdal.genmodel#//core/RequirementsGroup/requirements"/>
      </modelFacet>
      <labels
          visualID="5011"
          editPartClassName="RequirementTypeEditPart"
          itemSemanticEditPolicyClassName="RequirementTypeItemSemanticEditPolicy"
          notationViewFactoryClassName="RequirementTypeViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRequirementNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedFont="true"/>
        </viewmap>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../metamodel/rdal.genmodel#//core/IdentifiedElement/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        visualID="3004"
        editPartClassName="AssumptionEditPart"
        itemSemanticEditPolicyClassName="AssumptionItemSemanticEditPolicy"
        notationViewFactoryClassName="AssumptionViewFactory"
        canonicalEditPolicyClassName="AssumptionCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="AssumptionGraphicalNodeEditPolicy"
        createCommandClassName="AssumptionCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="AssumptionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="AssumptionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AssumptionFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureAssumptionNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AssumptionFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(true);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineStyle(org.eclipse.draw2d.Graphics.LINE_DASH);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureAssumptionNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureAssumptionNameFigure.setText(&quot;What should the environment do?&quot;);&#xA;&#xA;this.add(fFigureAssumptionNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureAssumptionNameFigure() {&#xA;&#x9;&#x9;return fFigureAssumptionNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 250, 250, 190);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../metamodel/rdal.genmodel#//core/Assumption"/>
        <containmentMetaFeature
            href="../metamodel/rdal.genmodel#//core/RequirementsGroup/requirements"/>
        <childMetaFeature
            href="../metamodel/rdal.genmodel#//core/RequirementsGroup/requirements"/>
      </modelFacet>
      <labels
          visualID="5016"
          editPartClassName="AssumptionNameEditPart"
          itemSemanticEditPolicyClassName="AssumptionNameItemSemanticEditPolicy"
          notationViewFactoryClassName="AssumptionNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureAssumptionNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../metamodel/rdal.genmodel#//core/IdentifiedElement/name"/>
        </modelFacet>
      </labels>
    </childNodes>
    <topLevelNodes
        visualID="2007"
        editPartClassName="RequirementsGroupEditPart"
        itemSemanticEditPolicyClassName="RequirementsGroupItemSemanticEditPolicy"
        notationViewFactoryClassName="RequirementsGroupViewFactory"
        canonicalEditPolicyClassName="RequirementsGroupCanonicalEditPolicy"
        compartments="//@diagram/@compartments.0"
        graphicalNodeEditPolicyClassName="RequirementsGroupGraphicalNodeEditPolicy"
        createCommandClassName="RequirementsGroupCreateCommand">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="RequirementsGroupEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="RequirementsGroupFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RequirementsGroupFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRequirementsGroupNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RequirementsGroupFigure() {&#xA;&#x9;&#x9;this.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(THIS_FORE&#xA;);&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureRequirementsGroupNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRequirementsGroupNameFigure.setText(&quot;What Requirement Group?&quot;);&#xA;&#xA;this.add(fFigureRequirementsGroupNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRequirementsGroupNameFigure() {&#xA;&#x9;&#x9;return fFigureRequirementsGroupNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_FORE = new org.eclipse.swt.graphics.Color(null, 50, 50, 100);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <behaviour
          xsi:type="gmfgen:OpenDiagramBehaviour"/>
      <modelFacet>
        <metaClass
            href="../metamodel/rdal.genmodel#//core/RequirementsGroup"/>
        <containmentMetaFeature
            href="../metamodel/rdal.genmodel#//core/Specification/requirementGroups"/>
        <childMetaFeature
            href="../metamodel/rdal.genmodel#//core/Specification/requirementGroups"/>
      </modelFacet>
      <labels
          visualID="5013"
          editPartClassName="RequirementsGroupNameEditPart"
          itemSemanticEditPolicyClassName="RequirementsGroupNameItemSemanticEditPolicy"
          notationViewFactoryClassName="RequirementsGroupNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRequirementsGroupNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../metamodel/rdal.genmodel#//core/IdentifiedElement/name"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2012"
        editPartClassName="ActorEditPart"
        itemSemanticEditPolicyClassName="ActorItemSemanticEditPolicy"
        canonicalEditPolicyClassName="ActorCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="ActorGraphicalNodeEditPolicy"
        createCommandClassName="ActorCreateCommand">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="ActorEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="StakeHolderFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class StakeHolderFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public StakeHolderFigure() {&#xA;&#x9;&#x9;this.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(56)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.PolygonShape stakeHolderBody0 = new org.eclipse.draw2d.PolygonShape();&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(19)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(24)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(39)&#xA;, getMapMode().DPtoLP(24)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(39)&#xA;, getMapMode().DPtoLP(29)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(29)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(36)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(39)&#xA;, getMapMode().DPtoLP(48)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(39)&#xA;, getMapMode().DPtoLP(53)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(42)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(53)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(48)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(36)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(29)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(29)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(24)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(24)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(19)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(19)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(26)&#xA;, getMapMode().DPtoLP(16)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(28)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(28)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(26)&#xA;, getMapMode().DPtoLP(4)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(21)&#xA;, getMapMode().DPtoLP(3)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(16)&#xA;, getMapMode().DPtoLP(4)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(14)&#xA;, getMapMode().DPtoLP(16)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(19)&#xA;));&#xA;stakeHolderBody0.setFill(true);&#xA;&#x9;stakeHolderBody0.setForegroundColor(STAKEHOLDERBODY0_FORE&#xA;);&#xA;&#x9;stakeHolderBody0.setBackgroundColor(STAKEHOLDERBODY0_BACK&#xA;);&#xA;&#xA;this.add(stakeHolderBody0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color STAKEHOLDERBODY0_FORE = new org.eclipse.swt.graphics.Color(null, 120, 120, 90);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color STAKEHOLDERBODY0_BACK = new org.eclipse.swt.graphics.Color(null, 230, 230, 250);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:ResizeConstraints"
            resizeHandles="4"/>
        <attributes
            xsi:type="gmfgen:DefaultSizeAttributes"
            width="35"
            height="50"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../metamodel/rdal.genmodel#//core/Actor"/>
        <containmentMetaFeature
            href="../metamodel/rdal.genmodel#//core/Specification/actors"/>
        <childMetaFeature
            href="../metamodel/rdal.genmodel#//core/Specification/actors"/>
      </modelFacet>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="5019"
          editPartClassName="ActorNameEditPart"
          itemSemanticEditPolicyClassName="ActorNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="ActorFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ActorFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ActorFigure() {&#xA;&#x9;&#x9;this.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(40)&#xA;, getMapMode().DPtoLP(56)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.PolygonShape stakeHolderBody0 = new org.eclipse.draw2d.PolygonShape();&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(19)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(24)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(39)&#xA;, getMapMode().DPtoLP(24)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(39)&#xA;, getMapMode().DPtoLP(29)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(29)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(36)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(39)&#xA;, getMapMode().DPtoLP(48)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(39)&#xA;, getMapMode().DPtoLP(53)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(20)&#xA;, getMapMode().DPtoLP(42)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(53)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(48)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(36)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(29)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(29)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(24)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(24)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(19)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(23)&#xA;, getMapMode().DPtoLP(19)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(26)&#xA;, getMapMode().DPtoLP(16)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(28)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(28)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(26)&#xA;, getMapMode().DPtoLP(4)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(21)&#xA;, getMapMode().DPtoLP(3)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(16)&#xA;, getMapMode().DPtoLP(4)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(12)&#xA;, getMapMode().DPtoLP(12)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(14)&#xA;, getMapMode().DPtoLP(16)&#xA;));&#xA;stakeHolderBody0.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(17)&#xA;, getMapMode().DPtoLP(19)&#xA;));&#xA;stakeHolderBody0.setFill(true);&#xA;&#x9;stakeHolderBody0.setForegroundColor(STAKEHOLDERBODY0_FORE&#xA;);&#xA;&#x9;stakeHolderBody0.setBackgroundColor(STAKEHOLDERBODY0_BACK&#xA;);&#xA;&#xA;this.add(stakeHolderBody0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color STAKEHOLDERBODY0_FORE = new org.eclipse.swt.graphics.Color(null, 120, 120, 90);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color STAKEHOLDERBODY0_BACK = new org.eclipse.swt.graphics.Color(null, 200, 230, 250);&#xA;&#xA;"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../metamodel/rdal.genmodel#//core/IdentifiedElement/name"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2010"
        editPartClassName="VerificationActivityEditPart"
        itemSemanticEditPolicyClassName="VerificationActivityItemSemanticEditPolicy"
        notationViewFactoryClassName="VerificationActivityViewFactory"
        canonicalEditPolicyClassName="VerificationActivityCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="VerificationActivityGraphicalNodeEditPolicy"
        createCommandClassName="VerificationActivityCreateCommand">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="VerificationActivityEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="FLOW_LAYOUT"
          className="VerificationActivityFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class VerificationActivityFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureVerificationActivityNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public VerificationActivityFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(true);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_CENTER&#xA;);&#xA;&#x9;layoutThis.setMajorSpacing(25);&#xA;&#x9;layoutThis.setMinorSpacing(25);&#xA;&#x9;layoutThis.setHorizontal(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;this.setSize(getMapMode().DPtoLP(60)&#xA;, getMapMode().DPtoLP(40)&#xA;);&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(30)&#xA;, getMapMode().DPtoLP(30)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureVerificationActivityNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureVerificationActivityNameFigure.setText(&quot;&quot;);&#xA;&#xA;this.add(fFigureVerificationActivityNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureVerificationActivityNameFigure() {&#xA;&#x9;&#x9;return fFigureVerificationActivityNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 210, 220, 200);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="../metamodel/rdal.genmodel#//core/VerificationActivity"/>
        <containmentMetaFeature
            href="../metamodel/rdal.genmodel#//core/Specification/verificationActivities"/>
        <childMetaFeature
            href="../metamodel/rdal.genmodel#//core/Specification/verificationActivities"/>
      </modelFacet>
      <labels
          visualID="5017"
          editPartClassName="VerificationActivityNameEditPart"
          itemSemanticEditPolicyClassName="VerificationActivityNameItemSemanticEditPolicy"
          notationViewFactoryClassName="VerificationActivityNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureVerificationActivityNameFigure"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="../metamodel/rdal.genmodel#//core/IdentifiedElement/name"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <links
        visualID="4016"
        editPartClassName="AbstractRequirementContainedRequirementsEditPart"
        itemSemanticEditPolicyClassName="AbstractRequirementContainedRequirementsItemSemanticEditPolicy"
        notationViewFactoryClassName="AbstractRequirementContainedRequirementsViewFactory"
        createCommandClassName="AbstractRequirementContainedRequirementsCreateCommand"
        reorientCommandClassName="AbstractRequirementContainedRequirementsReorientCommand">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          displayName="Decomposed To"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="RequirementsContainedRequirementsFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RequirementsContainedRequirementsFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RequirementsContainedRequirementsFigure() {&#xA;&#x9;&#x9;this.setFillXOR(true);&#xA;&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setForegroundColor(DF_FORE&#xA;);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-5)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;df.setFillXOR(true);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_FORE = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;"/>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../metamodel/rdal.genmodel#//core/AbstractRequirement/containedRequirements"/>
      </modelFacet>
      <creationConstraints
          targetEnd="//@expressionProviders/@providers.0/@expressions.0"/>
    </links>
    <links
        visualID="4021"
        editPartClassName="ContractualElementStakeholdersEditPart"
        itemSemanticEditPolicyClassName="ContractualElementStakeholdersItemSemanticEditPolicy"
        createCommandClassName="ContractualElementStakeholdersCreateCommand"
        reorientCommandClassName="ContractualElementStakeholdersReorientCommand">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="RequirementsStakeHoldersLink"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RequirementsStakeHoldersLink extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RequirementsStakeHoldersLink() {&#xA;&#x9;&#x9;this.setFillXOR(true);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setForegroundColor(DF_FORE&#xA;);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_FORE = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../metamodel/rdal.genmodel#//core/ContractualElement/stakeholders"/>
      </modelFacet>
      <creationConstraints
          sourceEnd="//@expressionProviders/@providers.0/@expressions.1"/>
    </links>
    <links
        visualID="4019"
        editPartClassName="AbstractRequirementVerifiedByEditPart"
        itemSemanticEditPolicyClassName="AbstractRequirementVerifiedByItemSemanticEditPolicy"
        notationViewFactoryClassName="AbstractRequirementVerifiedByViewFactory"
        createCommandClassName="AbstractRequirementVerifiedByCreateCommand"
        reorientCommandClassName="AbstractRequirementVerifiedByReorientCommand">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="RequirementsVerificationActivityLink"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RequirementsVerificationActivityLink extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureVerifiedByLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RequirementsVerificationActivityLink() {&#xA;&#x9;&#x9;this.setFillXOR(true);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureVerifiedByLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureVerifiedByLabel.setText(&quot;&lt;&lt;verifiedBy>>&quot;);&#xA;&#xA;this.add(fFigureVerifiedByLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setForegroundColor(DF_FORE&#xA;);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureVerifiedByLabel() {&#xA;&#x9;&#x9;return fFigureVerifiedByLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_FORE = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../metamodel/rdal.genmodel#//core/AbstractRequirement/verifiedBy"/>
      </modelFacet>
      <labels
          visualID="6011"
          editPartClassName="WrappingLabelEditPart"
          itemSemanticEditPolicyClassName="WrappingLabelItemSemanticEditPolicy"
          notationViewFactoryClassName="AbstractRequirementVerifiedByLabelViewFactory"
          readOnly="true"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureVerifiedByLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.1"/>
      </labels>
    </links>
    <links
        visualID="4022"
        editPartClassName="ContractualElementDerivedFromEditPart"
        itemSemanticEditPolicyClassName="ContractualElementDerivedFromItemSemanticEditPolicy"
        createCommandClassName="ContractualElementDerivedFromCreateCommand"
        reorientCommandClassName="ContractualElementDerivedFromReorientCommand">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="RequirementDerivationLink"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RequirementDerivationLink extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDerivedFromLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RequirementDerivationLink() {&#xA;&#x9;&#x9;this.setFillXOR(true);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureDerivedFromLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureDerivedFromLabel.setText(&quot;&lt;&lt;derivedFrom>>&quot;);&#xA;&#xA;this.add(fFigureDerivedFromLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setForegroundColor(DF_FORE&#xA;);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDerivedFromLabel() {&#xA;&#x9;&#x9;return fFigureDerivedFromLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_FORE = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../metamodel/rdal.genmodel#//core/ContractualElement/derivedFrom"/>
      </modelFacet>
      <labels
          visualID="6012"
          editPartClassName="WrappingLabel2EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel2ItemSemanticEditPolicy"
          readOnly="true"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureDerivedFromLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.1"/>
      </labels>
    </links>
    <links
        visualID="4023"
        editPartClassName="RequirementRefinedBYEditPart"
        itemSemanticEditPolicyClassName="RequirementRefinedBYItemSemanticEditPolicy"
        createCommandClassName="RequirementRefinedBYCreateCommand"
        reorientCommandClassName="RequirementRefinedBYReorientCommand">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="RequirementRefinementLink"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RequirementRefinementLink extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRefinedByLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RequirementRefinementLink() {&#xA;&#x9;&#x9;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureRefinedByLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRefinedByLabel.setText(&quot;&lt;&lt;refinedBy>>&quot;);&#xA;&#xA;this.add(fFigureRefinedByLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setForegroundColor(DF_FORE&#xA;);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(6)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(-4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(-3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-6)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-4)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-3)&#xA;, getMapMode().DPtoLP(4)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(6)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRefinedByLabel() {&#xA;&#x9;&#x9;return fFigureRefinedByLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_FORE = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../metamodel/rdal.genmodel#//core/Requirement/refinedBY"/>
      </modelFacet>
      <labels
          visualID="6013"
          editPartClassName="WrappingLabel3EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel3ItemSemanticEditPolicy"
          readOnly="true"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureRefinedByLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.1"/>
      </labels>
    </links>
    <links
        visualID="4017"
        editPartClassName="RequirementAssumptionsEditPart"
        itemSemanticEditPolicyClassName="RequirementAssumptionsItemSemanticEditPolicy"
        notationViewFactoryClassName="RequirementAssumptionsViewFactory"
        createCommandClassName="RequirementAssumptionsCreateCommand"
        reorientCommandClassName="RequirementAssumptionsReorientCommand">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="RequirementAssumptionLink"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RequirementAssumptionLink extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureReqAssumptionsLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RequirementAssumptionLink() {&#xA;&#x9;&#x9;this.setFillXOR(true);&#xA;this.setLineStyle(org.eclipse.draw2d.Graphics.LINE_DASH);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureReqAssumptionsLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureReqAssumptionsLabel.setText(&quot;&lt;&lt;assumes>>&quot;);&#xA;&#xA;this.add(fFigureReqAssumptionsLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setFill(true);&#xA;&#x9;df.setForegroundColor(DF_FORE&#xA;);&#xA;&#x9;df.setBackgroundColor(DF_BACK&#xA;);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(-2)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(5)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(2)&#xA;, getMapMode().DPtoLP(-5)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureReqAssumptionsLabel() {&#xA;&#x9;&#x9;return fFigureReqAssumptionsLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_FORE = new org.eclipse.swt.graphics.Color(null, 0, 0, 0);&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color DF_BACK = new org.eclipse.swt.graphics.Color(null, 255, 255, 255);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:FeatureLinkModelFacet">
        <metaFeature
            href="../metamodel/rdal.genmodel#//core/Requirement/assumptions"/>
      </modelFacet>
      <labels
          visualID="6010"
          editPartClassName="WrappingLabel4EditPart"
          itemSemanticEditPolicyClassName="WrappingLabel4ItemSemanticEditPolicy"
          notationViewFactoryClassName="RequirementAssumptionsLabelViewFactory"
          readOnly="true"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFigureReqAssumptionsLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
        <modelFacet
            parser="//@labelParsers/@implementations.1"/>
      </labels>
    </links>
    <compartments
        visualID="7003"
        editPartClassName="RequirementsGroupRequirementsCompartmentEditPart"
        itemSemanticEditPolicyClassName="RequirementsGroupRequirementsCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="RequirementsGroupRequirementsCompartmentViewFactory"
        canonicalEditPolicyClassName="RequirementsGroupRequirementsCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0 //@diagram/@childNodes.1"
        title="RequirementsCompartment"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="RequirementsGroupFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class RequirementsGroupFigure extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRequirementsGroupNameFigure; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public RequirementsGroupFigure() {&#xA;&#x9;&#x9;this.setLayoutManager(new org.eclipse.draw2d.StackLayout());&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(THIS_FORE&#xA;);&#xA;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fFigureRequirementsGroupNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFigureRequirementsGroupNameFigure.setText(&quot;What Requirement Group?&quot;);&#xA;&#xA;this.add(fFigureRequirementsGroupNameFigure);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRequirementsGroupNameFigure() {&#xA;&#x9;&#x9;return fFigureRequirementsGroupNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_FORE = new org.eclipse.swt.graphics.Color(null, 50, 50, 100);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
    </compartments>
    <palette>
      <groups
          title="Nodes"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Requirement"
            description="Create a New Requirement"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/requirement.gif"
            genNodes="//@diagram/@childNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Requirements Group"
            description="Create a New Requirements Group"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/requirementGroup.gif"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Stakeholder"
            description="Who is concerned by this requirement?"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/stakeHolder.gif"
            genNodes="//@diagram/@topLevelNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Verification Activity"
            description="How will you verify that this requirement is fullfilled by the system?"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/verificationActivity.gif"
            genNodes="//@diagram/@topLevelNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Assumption"
            description="Create a New Assumption"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/assumption.gif"
            genNodes="//@diagram/@childNodes.1"/>
      </groups>
      <groups
          title="Links between Requirements"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Req Decomposed To"
            description="Requirement is Decomposed to finer Requirements"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/decomposition.gif"
            genLinks="//@diagram/@links.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Req Derived From"
            description="Requirement is Derived From Another Requirement"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/derived.gif"
            genLinks="//@diagram/@links.3"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Req Refined By"
            description="Requirement is Refined By Another Requirement"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/refined.gif"
            genLinks="//@diagram/@links.4"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Req Assumes"
            description="Requirement Depends on Assumptions"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/assumes.gif"
            genLinks="//@diagram/@links.5"/>
      </groups>
      <groups
          title="Other Links"
          collapse="true">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Link To StakeHolder"
            description="Link to StakeHolder of the requirement"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/linkStakeholder.gif"
            genLinks="//@diagram/@links.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Link To Verification Activity"
            description="Link to the Verification Activity of the Requirement"
            smallIconPath="/fr.openpeople.rdal.model.diagram/icons/obj16/linkTestcase.gif"
            genLinks="//@diagram/@links.2"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="fr.openpeople.rdal.model.core.diagram.general"
        name="RDAL">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="fr.openpeople.rdal.model.core.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="fr.openpeople.rdal.model.core.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="fr.openpeople.rdal.model.core.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="fr.openpeople.rdal.model.core.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin
      iD="fr.openpeople.rdal.model.diagram"
      name="RDAL Diagram Editor"
      provider="Lab-STICC">
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
  </plugin>
  <editor/>
  <navigator
      domainContentExtensionID="fr.openpeople.rdal.model.core.diagram.domainResourceContent"
      contentExtensionID="fr.openpeople.rdal.model.core.diagram.resourceContent"
      linkHelperExtensionID="fr.openpeople.rdal.model.core.diagram.navigatorLinkHelper"
      sorterExtensionID="fr.openpeople.rdal.model.core.diagram.navigatorSorter"
      actionProviderID="fr.openpeople.rdal.model.core.diagram.navigatorActionProvider">
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.0"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.1"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.2"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.0"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.1"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@topLevelNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.2"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@topLevelNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@links.2"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.2"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.2"
        child="//@diagram/@childNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.2"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.3"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@topLevelNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@topLevelNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@topLevelNodes.2"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.3"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@topLevelNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@links.3"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.3"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.3"
        child="//@diagram/@childNodes.1"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.3"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.4"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.4"
        child="//@diagram/@childNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.4"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.4"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.4"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.5"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.5"
        child="//@diagram/@childNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.5"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.5"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.5"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="../metamodel/rdal.genmodel#/"/>
  <expressionProviders>
    <providers
        xsi:type="gmfgen:GenExpressionInterpreter">
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self &lt;> oppositeEnd"/>
      <expressions
          xsi:type="gmfgen:GenConstraint"
          body="self &lt;> oppositeEnd"/>
    </providers>
  </expressionProviders>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.0/@labels.0/@modelFacet //@diagram/@childNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.0/@labels.0/@modelFacet //@diagram/@topLevelNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.2/@labels.0/@modelFacet"/>
    <implementations
        xsi:type="gmfgen:ExternalParser"
        uses="//@diagram/@links.2/@labels.0/@modelFacet //@diagram/@links.3/@labels.0/@modelFacet //@diagram/@links.4/@labels.0/@modelFacet //@diagram/@links.5/@labels.0/@modelFacet"/>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
